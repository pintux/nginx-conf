# GENERIC REVERSE-PROXY NGINX Configuration
# v. 1.0.0
# Author: Antonio Pintus <pintus@gmail.com>
# Last Update: 04/08/2015
# License: MIT
# NOTES: only for http protocol, no https configuration in this version

# Configure the current correct USER for your linux box, here 'developer' is just an example
user developer;


# Configure the number of worker processes to launch, usually 1 per CPU core
# NOTE: max clients formula
# max_clients = worker_processes * worker_connections
# i.e.:  4 * 2048 = 8192 max clients

worker_processes  2;

#Use this ONLY for quad core CPUs
#worker_cpu_affinity 0001 0010 0100 1000;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections 4096;
    use epoll;
}


http {

    # Enumerate all the backend nodes in your deployment
    upstream nodes {
        server 127.0.0.1:8080;
        # server 127.0.0.1:8081;
    }


    # The mime.types file is required to be on the same location of this conf. file
    include       mime.types;
    default_type  application/octet-stream;

    #Change the log format, if you prefer:
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    keepalive_timeout 65;
    proxy_read_timeout 200;

    sendfile on;

    tcp_nopush on;
    tcp_nodelay on;

    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/html text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the backend nodes (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    # Configure HTTP server

     server {
        listen       80;

        # Allow file uploads
        client_max_body_size 50M;

        # STATIC FILES SERVING
        # CHANGE the following root path to the directory containing all public static files
        # related to your application

        location /public/ {
            root /home/developer/MYAPP_PATH/public;
            # cache:
            expires 31d;
        }

        # Handling robots
        # CHANGE and uncomment the following location path to the directory the robot.txt file

        #location /robots.txt {
        #    /home/developer/MYAPP_PATH/public;
        #}

        #charset koi8-r;
        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://nodes;
            proxy_intercept_errors on;
        }

        # Configure WEBSOCKETS, e.g., if using node.js the default location path
        # is the following:
        location /socket.io {
            proxy_pass http://nodes;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }


		    # redirect not found error pages to the static page /404.html
        error_page 404                /404.html;
        #location =  /404.html {
        #   root /home/developer/path_to_error_pages_dir;
		    #   internal;
        #}

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   /home/developer/path_to_error_pages_dir;
        #    internal;
        #}

    }

}
